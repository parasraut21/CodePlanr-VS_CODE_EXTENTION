CodePlanr Agent Mode - Usage Guide
===================================

WHAT'S NEW:
-----------
✅ Mastra-powered AI agent for autonomous file operations
✅ Planning and execution with progress tracking
✅ Automatic error checking
✅ Two modes: Chat Mode & Agent Mode

HOW TO USE:
-----------

1. CONFIGURE API KEY (First Time Only):
   - Click the ⚙️ Config button in the extension
   - Enter your OpenAI API key
   - Or set OPENAI_API_KEY environment variable

2. SWITCH TO AGENT MODE:
   - Open CodePlanr AI panel in VS Code sidebar
   - Click "🤖 Agent" button at the bottom
   - The input placeholder will change

3. GIVE COMMANDS:
   Examples:
   - "create a cpp file for addition of 2 numbers"
   - "make a python file for fibonacci sequence"
   - "create a javascript file for sorting an array"
   - "make a java file for hello world"

4. WATCH THE MAGIC:
   The agent will:
   ✅ Create a plan with steps
   ✅ Show you the plan with checkboxes
   ✅ Execute each step automatically
   ✅ Create files
   ✅ Write code
   ✅ Check for errors
   ✅ Show success when done

FEATURES:
---------
📋 Automatic Planning - Breaks down tasks into steps
📁 File Creation - Creates files in your workspace
💻 Code Generation - Writes complete, working code
🔍 Error Checking - Validates code for errors
✅ Progress Tracking - Shows real-time progress
🎯 Smart Execution - Handles each step sequentially

MODES:
------
💬 Chat Mode: Traditional Q&A with AI
🤖 Agent Mode: Autonomous task execution with planning

EXAMPLE WORKFLOW:
-----------------
User: "create a cpp file for addition of 2 numbers"

Agent Response:
📋 Plan Created:
1. [ ] Create addition.cpp file
2. [ ] Write C++ code for addition
3. [ ] Check for compilation errors

⚡ Executing plan...
✅ Step 1: Create addition.cpp file
   Created file: addition.cpp
✅ Step 2: Write C++ code for addition
   Wrote code to addition.cpp
✅ Step 3: Check for compilation errors
   No errors found in addition.cpp

🎉 All tasks completed successfully!

SUPPORTED LANGUAGES:
-------------------
- C++ (.cpp)
- C (.c)
- JavaScript (.js)
- TypeScript (.ts)
- Python (.py)
- Java (.java)
- C# (.cs)
- Go (.go)
- Rust (.rs)

TIPS:
-----
- Be specific in your requests
- The agent works best with single-file tasks
- Files are created in your workspace root
- Code is automatically opened in the editor
- Switch to Chat Mode for questions/discussions

TROUBLESHOOTING:
----------------
- If API key error: Configure your OpenAI API key
- If no workspace: Open a folder in VS Code first
- If errors persist: Check the VS Code Developer Console

Built with Mastra AI Framework
